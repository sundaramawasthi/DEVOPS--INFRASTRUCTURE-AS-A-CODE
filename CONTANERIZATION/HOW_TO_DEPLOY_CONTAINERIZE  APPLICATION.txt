

RUNNING NGNIX  WEB SERVER AS A APPLICATION 
{
docker pull ngnix:latest 

then run docker images to show the images 

Now run images as a container - 

docker container run -itd  --name web-server-nginx -p 8080:80  nginx:latest
then its show container id 

now for see that nginx container are running as a container - 

docker ps -a 

then open your local host port 8080 
}


STAGE OF CONTAINERIZATION  - 
{
docker file (built)
docker images(shift)
docker container (run )
}

STRUCTURE OF DOCKER FILE 

name the file with docker file where D is capital 

In a docker file we have a intruction that are generally divided into two few part - 

1. FUNDAMENTAL INSTRUCTION -
2. CONFIGUARATION INSTRUCTION 
3. EXECUATIVE INSTRUCTION 

{
    1 . FUNDAMENTAL INSTRUCTION 

    Create a docker file with touch command 

    touch dockerfile

    use nano testeditor to open dockerfile 
}




First intruction we provide is ARG {arg is used by define use by form intruction}

To add little more substance of image where also includeing set of Run and CMD instruction 

Dockerfile{

    CODE_VERSION = 20.04

    FROM ubuntu:${CODE_VERSION}

    RUN apt-get update -y

    CMD ["bash"]

    
}

TIME TO BUILT A dockerfile and turun into a images

docker build -t img_from .
{
    process that heppen while buis the images 

IMAG WILL BUILD 

STORING ARGUMENT 

SETTING IP BASE IMAGE 

UPDATE THE OS 

IMAGE IS BUILD 


we can verify by type docker images 
}



DOCKERFILE CONFIGUARATION INSTARUCTION 

{
    docker build -t img_from-nav .

    after build the images run the images as a container by typeing 
 {intractive teritile enable detach}

    docker run -itd --name cont_img-env  img_run-env }
    container id recievd

    for saw the container types docker ps  -a 

    let execuate our container  - 

    by type 
    docker exec -it cont_run-env bash 
    now we have a root directory 

    now list the directory by type  ls 

    and lets check the envirement variable 

    echo $USER Command 

    now exit by simple exit cmd
    }

    Expose instruction 

    [ nano Dockerfile
    docker build -t img_expose .
     docker images
     docker run -itd --rm  --name  cont_expose -p 8080:80 img_expose
     docker container stop cont_expose{for stop port 8080}

    ]

CONTAINERIZING APPLICATION WITH DOCKER FILE - 
{

}