What is a docker ?

Docker is popular Contanerization tools
Docker is Contanerization platform from packageing your application along with all
of this dependencies .

The whole idea of docker is to easily developed the application ship container that can be deploy evrywhere.
It is free and open platform creating , delivery and operating application

DOCKER PLATFORM -

Docker platform is one of the feature provide by docker to manage the lifecycle of container .
Docker Provide the ability to package and run an applicaion loosly isolated enviroment called a
container .
TO manage the lifeCycle of container its provide Docker platform .

USE OF DOCKER PLATFORM -

Deplepment, deployment , Testing

NOTE- Wheather your production enviroment is Data Center , Cloud provider , hybried of tools its work same for all .

ADVANTAGE OF DOCKER -

BUILT, TEST, DEPLOY AND MAINTAIN

FEATURE -

SCALABLE
PROVIDE EASY AND FASTER CONFIGURATION
IS ABLE TO REDUCE THE SIZE
INCREASE PRODUCTIVITY
APPLICATION ISOLATION
SWARM
ROUTER MESH
SERVICES
SECURITY MANAGEMENT

      DOCKER COMPONENT -

DOCKER ARCHITUCTURE -

DOCKER BUILT ON CLIENT -SERVER ARCHITUCTURE
THE DOCKER CLIENT COMMNUCATE WITH DOCKER DAEMON WHICH HANDLE CONSTRUCTION , DISTRIBUATION AND EXECUATION OF DCKER CONTAINER .
YOU CAN USE DOCKER CLIENT AND DOCKER DOEMAN ON SAME MACHINE OR USE CAN USE IT SEPERATLY.
DOCKER CLIENT AND DOEMAN USE A REST API ,UNIX SOCKET OR NETWORK INTERFACE TO COMMNUCATE .

KEY COMPONENT OF DOCKER ARCHITECTURE -

FIRST DOCKER COMPONENT IS -> DOCKER HOST{IT OFFER Complete enviroment of execuete and running application that include docker deoman that is also a core component }
docker daemon handle docker object such as images, volume , container , network by listeing docker
API request .
TO manage request docker daeman commnucate with other daeman

SECOUND MAJOR COMPONENT IS DOCKER CLIENT ->
DOCKER User can use client intract with docker when client execuate a docker command its transmit to docker daeman which execuate it

THIRED COMPONENT IS DOCKER REGISTRY - >
docker images are store in docker registry , docker hub is a public repository that anybody can use.

DOCKER OBJECT -
you can create a images container , network , volume , plugins and another thing when you use docker

DIFFERENT TYPES OF DOCKER OBJECT -
IMAGES- Image is a read only template , lot of time image based on other image with another custum
Container -> docker container are crreated when you ran a docker images .This container contain all of application on the enviroment.Docker API or docker CLI are use to start and stop the container.
Volume-> volume are use to store persisitant data generated by doccker and utilizes by docker container.
Network -> A way for all isolated container to commnucate with one another.

DOCKER ENGINE ->
Docker engine is a core part of whole docker engine , It is an application with a client-serever archiitucture that are installed on host machine .
ITS has three component server, API , CLI

DOCKER IMAGES -
An images is read only template for building a docker template that is based on another image that is been
modified someway you can either make your images used these images that are developed by other and made available
through registry .

TO create a images you can create a docker file for a simple syntax for define the step required .
a layer of images are created a each instruction of docker file when you change the docker file and rebuilt the image only those layer are changes and rebuilt

when compare to other virtual technology them docker images are lightweight , tiny and fast .

    TYPES OF DOCKER IMAGES -

    Docker images are divided into two categories .

    Parent images -
    It is specified by the FORM directive in the image's pf dockerfile .
    It serves as a foundation of all docker command .
    A dockerfile from scratch directive creates a basic images without using any parent images.


      BASE IMAGES -

      It does not have parent images in his docker file .
      A FROM scratch directive is used in a dockerfile to create it .



      DOCKER IMAGES COMMAND - >

      docker image build -> create an image
      docker image history -> display an image history
      docker image inspect -> display expensive info abot one or more images
      docker image ls -> list the images
      docker iamge prune -> delete unused images
      docker image pull -> pull images from registey
      docker images push -> push image to repositiry
      docker image rm -> delete one or more image
      docker image save -> save one or more image

DOCKER CONYAINER ->

A container are runnable instance of images
a container are isolated from other container and its host machine .
When you create or start a container you define it by its images any configuration option you give
any chages to state of container that is not save in persisitance storage lost when container are remove .

Docker container is tools that is used to create test and deploy to an application.

you can create , start, stop, move a container , deletea container by the help of docker API and CLI

Also you can
attach storage to container
connected to one or more network
construct a new images
